<!DOCTYPE HTML>
<!--
	Synchronous by TEMPLATED
    templated.co @templatedco
    Released for free under the Creative Commons Attribution 3.0 license (templated.co/license)
-->
<html>

<head>
	<title>ExpressML-Visualize</title>
	<meta http-equiv="content-type" content="text/html; charset=utf-8" />
	<meta name="description" content="" />
	<meta name="keywords" content="" />
	<link href='http://fonts.googleapis.com/css?family=Lato:300,400,700,900' rel='stylesheet' type='text/css'>
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
	<script src="js/skel.min.js"></script>
	<script src="js/skel-panels.min.js"></script>
	<script src="js/init.js"></script>
	<script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
	<link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css">

	<script src="https://rawgit.com/enyo/dropzone/master/dist/dropzone.js"></script>
	<link rel="stylesheet" href="https://rawgit.com/enyo/dropzone/master/dist/dropzone.css">

	<noscript>
		<link rel="stylesheet" href="css/skel-noscript.css" />
		<link rel="stylesheet" href="css/style.css" />
	</noscript>
	<script>

		function showHistogram() {
			console.log("hist clicked");
			$("#graph").hide();
			$("#boxplot").hide();
			$(".heat").hide();
			$("#scatterplot").hide();
			$("#hist").show("slow");

		}

		function showData() {
			console.log("Data clicked");
			$("#hist").hide();
			$("#boxplot").hide();
			$(".heat").hide();
			$("#scatterplot").hide();
			$("#graph").show("slow");

		}

		function showHeatmaps() {
			console.log("heatmap clicked");
			$("#graph").hide();
			$("#boxplot").hide();
			$("#hist").hide();
			$("#scatterplot").hide();
			$(".heat").show("slow");

		}

		function showBoxplot() {
			console.log("box clicked");
			$("#graph").hide();
			$("#hist").hide();
			$(".heat").hide();
			$("#scatterplot").hide();
			$("#boxplot").show("slow");

		}

		function showScatter() {
			console.log("scatter clicked");
			$("#graph").hide();
			$("#hist").hide();
			$(".heat").hide();
			$("#boxplot").hide();
			$("#scatterplot").show("slow");
		}

		$(document).ready(function () {

			$("#hist").hide();
			$("#boxplot").hide();
			$(".heat").hide();
			$("#scatterplot").hide();
			console.log("hist hidden");
			console.log("box hidden");
		});

	</script>

	<style>
		rect.selected {
			stroke: #000;
			stroke-width: 2px;
		}

		.axis .domain {
			display: none;
		}

		.axis .tick text.selected {
			font-weight: bold;
			font-size: 1.2em;
			fill: #47ff63;
		}

		.axis .tick line.selected {
			stroke: #47ff63;
		}

		.tip {
			position: absolute;
			font-size: .8em;
			text-align: center;
			text-shadow: -1px -1px 1px #ffffff, -1px 0px 1px #ffffff, -1px 1px 1px #ffffff, 0px -1px 1px #ffffff, 0px 1px 1px #ffffff, 1px -1px 1px #ffffff, 1px 0px 1px #ffffff, 1px 1px 1px #ffffff;
		}

		#legend {
			margin-bottom: 10px;
		}

		#legend text {
			font-size: .8em;
		}
	</style>
</head>

<body>
	<div id="wrapper">

		<!-- Header -->
		<div id="header">
			<div class="container">

				<!-- Logo -->
				<div id="logo">
					<h1><a href="#">Express-ML</a></h1>
					<span>Easy to use tool to visualize your data</span>
				</div>

				<!-- Nav -->
				<nav id="nav">
					<ul>
						<li><a href="/mainpage">Homepage</a></li>

						<li class="active"><a href="/visualize">Visualize</a></li>
						<li><a href="/analyze">Analyze</a></li>
					</ul>
				</nav>
			</div>
		</div>
		<!-- /Header -->

		<div id="page">
			<div class="container">
				<div class="row">
					<div class="3u">
						<section id="sidebard2">
							<header>
								<h2>Plots</h2>
							</header>
							<ul class="style1">
								<li class="first"><span class="fa fa-check"></span><a href="#" onclick="showData()">Data</a></li><br>
								<li><span class="fa fa-check"></span><a href="#" onclick="showHistogram()">Histogram</a></li><br>
								<li><span class="fa fa-check"></span><a href="#" onclick="showBoxplot()">Box Plot</a></li><br>
								<li><span class="fa fa-check"></span><a href="#" onclick="showHeatmaps()">Heatmaps</a></li><br>
								<li><span class="fa fa-check"></span><a href="#" onclick="showScatter()">Scatter Plots</a></li><br>
							</ul>
						</section>
					</div>


					<div class="9u skel-cell-important">
						<section id="content">
							<header>
								<div id="graph"></div>
								<script>
									Plotly.d3.csv("../uploads/" + "<%= user.username %>" + ".csv", function (err, rows) {

										function unpack(rows, key) {
											return rows.map(function (row) { return row[key]; });
										}

										var headerNames = Plotly.d3.keys(rows[0]);

										var headerValues = [];
										var cellValues = [];
										for (i = 0; i < headerNames.length; i++) {
											headerValue = [headerNames[i]];
											headerValues[i] = headerValue;
											cellValue = unpack(rows, headerNames[i]);
											cellValues[i] = cellValue;
										}

										// clean date
										for (i = 0; i < cellValues[1].length; i++) {
											var dateValue = cellValues[1][i].split(' ')[0]
											cellValues[1][i] = dateValue
										}


										var data = [{
											type: 'table',
											header: {
												values: headerValues,
												align: "center",
												line: { width: 1, color: 'rgb(50, 50, 50)' },
												fill: { color: ['rgb(235, 100, 230)'] },
												font: { family: "Arial", size: 11, color: "white" }
											},
											cells: {
												values: cellValues,
												align: ["center", "center"],
												line: { color: "black", width: 1 },
												fill: { color: ['rgba(228, 222, 249, 0.65)', 'rgb(235, 193, 238)', 'rgba(228, 222, 249, 0.65)'] },
												font: { family: "Arial", size: 10, color: ["black"] }
											}
										}]

										var layout = {
											title: "Data",
											height: 600,
											width: 950
										}

										Plotly.plot('graph', data, layout, { responsive: true });
									}); 
								</script>
								<div id="hist">
									<% for(var i=0;i< features.length;i++){%>
									<div id="myDivhist<%= i %>"></div>
									<% } %>
									<script>
										Plotly.d3.csv("../uploads/" + "<%= user.username %>" + ".csv", function (err, data) {

											var headerNames = Plotly.d3.keys(data[0]);
											for (var i = 0; i < headerNames.length - 1; i++) {
												var arr = [];
												for (var j = 0; j < data.length; j++) {
													arr.push(Number(data[j][headerNames[i]]));
												}
												var trace = {
													x: arr,
													type: 'histogram',
												};

												var data1 = [trace];

												var layout = {
													title: headerNames[i],
													font: { size: 18 },
													height: 600,
													width: 950,
													bargap: 0.05,
													bargroupgap: 0.2,
													barmode: "overlay",
													xaxis: { title: "Value" },
													yaxis: { title: "Count" }
												};
												Plotly.newPlot('myDivhist' + i, data1, layout, { responsive: true });
											}
										});

									</script>
								</div>
								<div id="boxplot">
									<% for(var i=0;i< features.length;i++){%>
									<div id="myDivb<%= i %>"></div>
									<% } %>
									<script>
										Plotly.d3.csv("../uploads/" + "<%= user.username %>" + ".csv", function (err, data) {

											var headerNames = Plotly.d3.keys(data[0]);
											for (var i = 0; i < headerNames.length - 1; i++) {
												var arr = [];
												for (var j = 0; j < data.length; j++) {
													arr.push(Number(data[j][headerNames[i]]));
												}
												var trace = {
													y: arr,
													type: 'box',
												};

												var data1 = [trace];

												var layout = {
													title: headerNames[i],
													font: { size: 18 },
													height: 600,
													width: 950
												};
												Plotly.newPlot('myDivb' + i, data1, layout, { responsive: true });
											}
										});

									</script>
								</div>
								<div id="scatterplot">
									<% for(var i=0;i< features.length;i++){%>
									<% for(var j=0;j< features.length;j++){%>
									<div id="myDivs<%= i %><%= j %>"></div>
									<br><br>
									<% } %>
									<% } %>
									<div id="cumplot"></div>
									<script>
										Plotly.d3.csv("../uploads/" + "<%= user.username %>" + ".csv", function (err, data) {
											var headerNames = Plotly.d3.keys(data[0]);
											for (var i = 0; i < headerNames.length; i++) {
												for (var k = 0; k < headerNames.length; k++) {
													var arr1 = [];
													var arr2 = [];
													for (var j = 0; j < data.length; j++) {
														arr1.push(Number(data[j][headerNames[i]]));
														arr2.push(Number(data[j][headerNames[k]]));
													}
													var trace1 = {
														x: arr1,
														y: arr2,
														mode: 'markers',
														type: 'scatter',
														marker: { size: 12 }
													};
													var data1 = [trace1];
													var layout = {
														title: headerNames[i] + " vs " + headerNames[k],
														font: { size: 18 },
														height: 600,
														width: 800,
														xaxis: {
															title: headerNames[i]
														},
														yaxis: {
															title: headerNames[k]
														}
													};
													Plotly.newPlot('myDivs' + i + k, data1, layout, { responsive: true });
												}


											}
										});


									</script>
								</div>
								<div id="legend" class="heat" style="padding-left: 5em;"></div>
								<div id="grid" class="heat" style="padding-left: 5em;"></div>
								<script src="https://d3js.org/d3.v4.min.js"></script>
								<script src="https://unpkg.com/jeezy@1.12.11/lib/jeezy.min.js"></script>
								<script src="https://unpkg.com/data2grid@1.0.0/build/data2grid.min.js"></script>
								<script src="https://cdnjs.cloudflare.com/ajax/libs/chroma-js/1.3.5/chroma.min.js"></script>
								<script>
									Plotly.d3.csv("../uploads/" + "<%= user.username %>" + ".csv", function (err, data) {
										d3.select("body").append("div").attr("class", "tip").style("display", "none");


										var cols = Plotly.d3.keys(data[0]);

										for (var i = 0; i < data.length; i++) {
											for (var j = 0; j < cols.length; j++) {
												data[i][cols[j]] = Number(data[i][cols[j]]);
											}
										}

										var corr = jz.arr.correlationMatrix(data, cols);

										var extent = d3.extent(corr.map(function (d) { return d.correlation; }).filter(function (d) { return d !== 1; }));

										var grid = data2grid.grid(corr);
										var rows = d3.max(grid, function (d) { return d.row; });

										var margin = { top: 20, bottom: 1, left: 20, right: 1 };

										var dim = d3.min([window.innerWidth * .9, window.innerHeight * .9]);

										var width = dim - margin.left - margin.right, height = dim - margin.top - margin.bottom;

										var svg = d3.select("#grid").append("svg")
											.attr("width", width + margin.left + margin.right)
											.attr("height", height + margin.top + margin.bottom)
											.append("g")
											.attr("transform", "translate(" + margin.left + ", " + margin.top + ")");

										var padding = .1;

										var x = d3.scaleBand()
											.range([0, width])
											.paddingInner(padding)
											.domain(d3.range(1, rows + 1));

										var y = d3.scaleBand()
											.range([0, height])
											.paddingInner(padding)
											.domain(d3.range(1, rows + 1));

										var c = chroma.scale(["tomato", "white", "steelblue"])
											.domain([extent[0], 0, extent[1]]);

										var x_axis = d3.axisTop(y).tickFormat(function (d, i) { return cols[i]; });
										var y_axis = d3.axisLeft(x).tickFormat(function (d, i) { return cols[i]; });

										svg.append("g")
											.attr("class", "x axis")
											.call(x_axis);

										svg.append("g")
											.attr("class", "y axis")
											.call(y_axis);

										svg.selectAll("rect")
											.data(grid, function (d) { return d.column_a + d.column_b; })
											.enter().append("rect")
											.attr("x", function (d) { return x(d.column); })
											.attr("y", function (d) { return y(d.row); })
											.attr("width", x.bandwidth())
											.attr("height", y.bandwidth())
											.style("fill", function (d) { return c(d.correlation); })
											.style("opacity", 1e-6)
											.transition()
											.style("opacity", 1);

										svg.selectAll("rect")

										d3.selectAll("rect")
											.on("mouseover", function (d) {

												d3.select(this).classed("selected", true);

												d3.select(".tip")
													.style("display", "block")
													.html(d.column_x + ", " + d.column_y + ": " + d.correlation.toFixed(2));

												var row_pos = y(d.row);
												var col_pos = x(d.column);
												var tip_pos = d3.select(".tip").node().getBoundingClientRect();
												var tip_width = tip_pos.width;
												var tip_height = tip_pos.height;
												var grid_pos = d3.select("#grid").node().getBoundingClientRect();
												var grid_left = grid_pos.left;
												var grid_top = grid_pos.top;

												var left = grid_left + col_pos + margin.left + (x.bandwidth() / 2) - (tip_width / 2);
												var top = grid_top + row_pos + margin.top - tip_height - 5;

												d3.select(".tip")
													.style("left", left + "px")
													.style("top", top + "px");

												d3.select(".x.axis .tick:nth-of-type(" + d.column + ") text").classed("selected", true);
												d3.select(".y.axis .tick:nth-of-type(" + d.row + ") text").classed("selected", true);
												d3.select(".x.axis .tick:nth-of-type(" + d.column + ") line").classed("selected", true);
												d3.select(".y.axis .tick:nth-of-type(" + d.row + ") line").classed("selected", true);

											})
											.on("mouseout", function () {
												d3.selectAll("rect").classed("selected", false);
												d3.select(".tip").style("display", "none");
												d3.selectAll(".axis .tick text").classed("selected", false);
												d3.selectAll(".axis .tick line").classed("selected", false);
											});

										// legend scale
										var legend_top = 15;
										var legend_height = 15;

										var legend_svg = d3.select("#legend").append("svg")
											.attr("width", width + margin.left + margin.right)
											.attr("height", legend_height + legend_top)
											.append("g")
											.attr("transform", "translate(" + margin.left + ", " + legend_top + ")");

										var defs = legend_svg.append("defs");

										var gradient = defs.append("linearGradient")
											.attr("id", "linear-gradient");

										var stops = [{ offset: 0, color: "tomato", value: extent[0] }, { offset: .5, color: "white", value: 0 }, { offset: 1, color: "steelblue", value: extent[1] }];

										gradient.selectAll("stop")
											.data(stops)
											.enter().append("stop")
											.attr("offset", function (d) { return (100 * d.offset) + "%"; })
											.attr("stop-color", function (d) { return d.color; });

										legend_svg.append("rect")
											.attr("width", width)
											.attr("height", legend_height)
											.style("fill", "url(#linear-gradient)");

										legend_svg.selectAll("text")
											.data(stops)
											.enter().append("text")
											.attr("x", function (d) { return width * d.offset; })
											.attr("dy", -3)
											.style("text-anchor", function (d, i) { return i == 0 ? "start" : i == 1 ? "middle" : "end"; })
											.text(function (d, i) { return d.value.toFixed(2) + (i == 2 ? ">" : ""); })
									});
								</script>


							</header>


						</section>
					</div>
				</div>

			</div>
		</div>

		<!-- Copyright -->
		<div id="copyright">
			<div class="container">
				Design: <a href="http://templated.co">TEMPLATED</a> Images: <a href="http://unsplash.com">Unsplash</a> (<a href="http://unsplash.com/cc0">CC0</a>)
			</div>
		</div>

	</div>
</body>

</html>